% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/auxiliary.R
\name{sdTemporalFunction}
\alias{sdTemporalFunction}
\title{Transform Time Series Variables into Temporal Functions}
\usage{
sdTemporalFunction(x, colTimes = 1, colValue = 2, method = "linear",
  sep = ",", dec = ".", header = TRUE, timeSeriesDirectory = "")
}
\arguments{
\item{x}{The time series variable value. It can be a fixed value, a matrix, 
a data.frame or a character string with a file name. See details for more
information.}

\item{colTimes}{(Optional) The number or name of the column that contains the 
time sequence, when an element of \code{x} is a matrix, a data.frame or 
a text file name. 
The default value is 1.}

\item{colValue}{(Optional) The number or name of the column that contains the 
time series values, when an element of \code{x} is a matrix, a data.frame or 
a text file name. 
The default value is 2.}

\item{method}{Specifies the interpolation method to be used. Choices are: 
"linear" or "constant" for an \code{\link[stats]{approxfun}} function 
performing the interpolation; 
or, "fmm", "natural", "periodic", "monoH.FC" or "hyman" for a 
\code{\link[stats]{splinefun}} function performing the interpolation.}

\item{sep}{The field separator character used in the data files, when 
\code{x} is a file name. Default is ",".}

\item{dec}{The decimal point character used in the data files, when \code{x} 
is a file name. Default is ".".}

\item{header}{a logical value indicating whether the file contains the names 
of the variables as its first line. If missing, the value is determined from 
the file format: header is set to TRUE if and only if the first row contains 
one fewer field than the number of columns. To be passed to the 
\code{\link[utils]{read.table}} function. Default is \code{TRUE}.}

\item{timeSeriesDirectory}{The path to the directory where the time series 
data files are stored, when \code{x} is a character file name.}
}
\value{
A function performing the linear, constant or spline interpolation of 
the time series points or \code{NULL} if an error occurs.
}
\description{
The time series variables are the model variables that vary over time, e.g.
a diet that change after a period of time, meteorological data, etc. This 
function helps to transform this kind of input variables into temporal 
functions and it is automatically used by the \code{\link{sdScenarioClass}}. 
It accepts as inputs fixed values, matrices, data.frames or 
text file names, and returns a function performing the linear, constant or 
spline interpolation with extrapolation outside of the time interval. 
See details for more informations about the accepted 
types.
}
\details{
Uses the \code{\link[stats]{approxfun}} or the \code{\link[stats]{splinefun}}
function to interpolate the time series values across the given time 
sequence.

What happens when \code{x} is a:
\itemize{
  \item fixed value: The fixed value is repeated for any time step.
  \item matrix or data.frame: The column \code{colTimes} (default is 1) 
  should contain the time sequence and the column \code{colValues} (default 
  is 2) should contain the values for each given time. Both columns are 
  numeric.
  \item character: It is interpreted as a text file name. This file must 
  be inside the current working directory or inside the 
  \code{timeSeriesDirectory}. The file should have 2 columns, the column 
  \code{colTimes} (default is 1) should contain the time sequence and the 
  column \code{colValues} (default is 2) should contain the values for each 
  given time. Both columns are numeric.
}
}
\examples{
# Diet in a data.frame with constant interpolation 
diet <- data.frame(time = c(0,5,10), value = c(10,50,100))
dietFun <- sdTemporalFunction(x = diet, method = "constant") 

dietFun(2)
#> [1] 10
dietFun(7)
#> [1] 50
dietFun(10)
#> [1] 100
}
